<?xml version="1.0" encoding="UTF-8"?>
<routes id="camel-xml-io-dsl"
        xmlns="http://camel.apache.org/schema/spring"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
        ">
    <!--
    The 'direct:storage-facility-create' route defines the logic
    for attempting to create a new storage facility.
    -->
    <route>
        <from uri="direct:storage-facility-create"/>

        <!--
        Save the storage facility's company slug for use in composing
        the 'HX-Location'.
        -->
        <setHeader name="owningCompanySlug">
            <simple>${header.slug}</simple>
        </setHeader>

        <!--
        Synthesize the 'create' parameter, which specifies the
        RAML-defined URI to use for creating new storage facilities.
        -->
        <setHeader name="create">
            <simple>/api/${header.slug}/storage-facilities</simple>
        </setHeader>

        <to uri="jslt:jslt/storage-facility/create-request.jslt"/>
        <to uri="direct:put-storage-facility-new"/>

        <choice>
            <when>
                <simple>${header.CamelHttpResponseCode} range '200..299'</simple>

                <!--
                To do a redirect with htmx, the status code must be 200 and
                the 'HX-Location' header have the location.
                -->
                <setHeader name="CamelHttpResponseCode">
                    <constant resultType="int">200</constant>
                </setHeader>

                <setHeader name="HX-Location">
                    <ognl>
                        "/storage-facility/" +
                        headers.owningCompanySlug +
                        "/view?self=" +
                        request.body.at("/_links/self/href").asText()
                    </ognl>
                </setHeader>
            </when>

            <otherwise>
                <setHeader name="CamelHttpResponseCode">
                    <constant resultType="int">200</constant>
                </setHeader>

                <to uri="velocity:classpath:velocity/error.vm"/>
            </otherwise>
        </choice>

        <removeHeader name="owningCompanySlug"/>
        <to uri="direct:finish-html-file"/>
    </route>
</routes>
