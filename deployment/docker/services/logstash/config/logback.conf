# @(#) Logback-based UDP Logstash Configuration

input {
    udp {
        # These must match Logback and Docker Compose settings.
        port     => 5514
        type     => "logback"

        # Only JSON is expected and supported.
        codec    => "json"
    }
}

# ECS fields with dots or dashes appear to cause Loki ingress issues.
# That, combined with implementation notes linked below, are
# what motivates the transformation rules defined here.
#
# see: https://grafana.com/blog/2020/04/21/how-labels-in-loki-can-make-log-queries-faster-and-easier/
# see: https://grafana.com/docs/loki/latest/clients/logstash/
filter {
    mutate {
        rename => {
            "host.name"               => "hostname"
            "http.request.method"     => "httpmethod"
            "service.name"            => "microservice"
            "url.path"                => "urlpath"
            "user-agent"              => "useragent"
        }
    }

    mutate {
        replace => {
            "message" => "%{message} correlationId=%{correlationId}"
        }
    }

    mutate {
        remove_field => [
            "HOSTNAME",
            "correlationId",
            "kamonTraceId",
            "kamonSpanId",
            "level_value",
            "thread_name"
        ]
    }
}

output {
    # Uncomment this section in order to see what logstash is
    # producing within the Docker Compose logs.
    #
    #stdout {
    #    codec => rubydebug
    #}

    loki {
        url               => "http://loki.docker:3100/loki/api/v1/push"

        message_field     => "message"
        max_delay         => 20
        min_delay         => 2
    }
}

